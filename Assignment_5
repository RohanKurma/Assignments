PROBLEM:

Create one Python file in your PythonAnywhere account (name it ipa_5.py) that includes full implementation of the following:

Write a definition for a class named Circle with attributes center and radius, where the center is a Point object and the radius is a number.
Hint: You will also need to provide a definition for a class named Point.

Instantiate a Circle object that represents a circle with its center at (150,100) and a radius 75.

Write a function named point_in_circle that takes a Circle and a Point and returns True if the Point lies in or on the boundary of the circle.

Write a function named rect_in_circle that takes a Circle and a Rectangle and returns True if the Rectangle lies entirely in or on the boundary of the circle.
Hint: You defined Rectangle in your in-class exercises for chapter 10 but you may have to modify your definition for this program.

Write a function named rect_circle_overlap that takes a Circle and a Rectangle and returns True if any of the corners of the Rectangle fall inside the circle.

SOLUTION:

class Circle:
    def __init__(self, c, r):
        self.c = c
        self.r = r

class Point:
    def __init__(self, x=0,y=0):
        self.x = x
        self.y = y

class Rectangle:
    def __init__(self, cor1=0, cor2=0, cor3=0, cor4=0):

        self.__cor1 = cor1
        self.__cor2 = cor2
        self.__cor3 = cor3
        self.__cor4 = cor4


def rect_in_circle(Circle, Rectangle):
    c = Circle.c
    r = Circle.r
    
    result = []

    for k, v in vars(rect1).items():

        dist = (c.x - v.x)**2 + (c.y - v.y)**2
        if dist <= r**2:
            result.append(True)
        else:
            result.append(False)
            
            
    if all(result):
        return True

    else:
        return False
        
def rect_circle_overlap(Circle,Rectangle):
    c = Circle.c
    r = Circle.r

    result =[]

    for k, v in vars(rect1).items():

        dist = (c.x - v.x)**2 + (c.y - v.y)**2
        if dist <= r**2:
            result.append(True)
        else:
            result.append(False)
    if any(result):
        return True

    else:
        return False
        
circle = Circle
circle.c = Point
circle.c.x = 150.0
circle.c.y = 100.0
circle.r = 75.0

rect1 = Rectangle(Point(150,100),Point(150,100),Point(120,90),Point(12,100))
        
print(rect_in_circle(circle, rect1))
print(rect_circle_overlap(circle, rect1))

